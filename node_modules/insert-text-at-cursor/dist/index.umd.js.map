{"version":3,"file":"index.umd.js","sources":["../index.js"],"sourcesContent":["let browserSupportsTextareaTextNodes;\r\n\r\n/**\r\n * @param {HTMLElement} input\r\n * @return {boolean}\r\n */\r\nfunction canManipulateViaTextNodes(input) {\r\n  if (input.nodeName !== \"TEXTAREA\") {\r\n    return false;\r\n  }\r\n  if (typeof browserSupportsTextareaTextNodes === \"undefined\") {\r\n    const textarea = document.createElement(\"textarea\");\r\n    textarea.value = 1;\r\n    browserSupportsTextareaTextNodes = !!textarea.firstChild;\r\n  }\r\n  return browserSupportsTextareaTextNodes;\r\n}\r\n\r\n/**\r\n * @param {HTMLTextAreaElement|HTMLInputElement} input\r\n * @param {string} text\r\n * @returns {void}\r\n */\r\nexport default function(input, text) {\r\n  // Most of the used APIs only work with the field selected\r\n  input.focus();\r\n\r\n  // IE 8-10\r\n  if (document.selection) {\r\n    const ieRange = document.selection.createRange();\r\n    ieRange.text = text;\r\n\r\n    // Move cursor after the inserted text\r\n    ieRange.collapse(false /* to the end */);\r\n    ieRange.select();\r\n\r\n    return;\r\n  }\r\n\r\n  // Webkit + Edge\r\n  const isSuccess = document.execCommand(\"insertText\", false, text);\r\n  if (!isSuccess) {\r\n    const start = input.selectionStart;\r\n    const end = input.selectionEnd;\r\n    // Firefox (non-standard method)\r\n    if (typeof input.setRangeText === \"function\") {\r\n      input.setRangeText(text);\r\n    } else {\r\n      if (canManipulateViaTextNodes(input)) {\r\n        const textNode = document.createTextNode(text);\r\n        let node = input.firstChild;\r\n\r\n        // If textarea is empty, just insert the text\r\n        if (!node) {\r\n          input.appendChild(textNode);\r\n        } else {\r\n          // Otherwise we need to find a nodes for start and end\r\n          let offset = 0;\r\n          let startNode = null;\r\n          let endNode = null;\r\n\r\n          // To make a change we just need a Range, not a Selection\r\n          const range = document.createRange();\r\n\r\n          while (node && (startNode === null || endNode === null)) {\r\n            const nodeLength = node.nodeValue.length;\r\n\r\n            // if start of the selection falls into current node\r\n            if (start >= offset && start <= offset + nodeLength) {\r\n              range.setStart((startNode = node), start - offset);\r\n            }\r\n\r\n            // if end of the selection falls into current node\r\n            if (end >= offset && end <= offset + nodeLength) {\r\n              range.setEnd((endNode = node), end - offset);\r\n            }\r\n\r\n            offset += nodeLength;\r\n            node = node.nextSibling;\r\n          }\r\n\r\n          // If there is some text selected, remove it as we should replace it\r\n          if (start !== end) {\r\n            range.deleteContents();\r\n          }\r\n\r\n          // Finally insert a new node. The browser will automatically\r\n          // split start and end nodes into two if necessary\r\n          range.insertNode(textNode);\r\n        }\r\n      } else {\r\n        // For the text input the only way is to replace the whole value :(\r\n        const value = input.value;\r\n        input.value = value.slice(0, start) + text + value.slice(end);\r\n      }\r\n    }\r\n\r\n    // Correct the cursor position to be at the end of the insertion\r\n    input.setSelectionRange(start + text.length, start + text.length);\r\n\r\n    // Notify any possible listeners of the change\r\n    const e = document.createEvent(\"UIEvent\");\r\n    e.initEvent(\"input\", true, false);\r\n    input.dispatchEvent(e);\r\n  }\r\n}\r\n"],"names":["browserSupportsTextareaTextNodes","canManipulateViaTextNodes","input","nodeName","textarea","document","createElement","value","firstChild","text","focus","selection","ieRange","createRange","collapse","select","isSuccess","execCommand","start","selectionStart","end","selectionEnd","setRangeText","textNode","createTextNode","node","appendChild","offset","startNode","endNode","range","nodeLength","nodeValue","length","setStart","setEnd","nextSibling","deleteContents","insertNode","slice","setSelectionRange","e","createEvent","initEvent","dispatchEvent"],"mappings":";;;;;;AAAA,IAAIA,yCAAJ;;;;;;AAMA,SAASC,yBAAT,CAAmCC,KAAnC,EAA0C;MACpCA,MAAMC,QAAN,KAAmB,UAAvB,EAAmC;WAC1B,KAAP;;MAEE,OAAOH,gCAAP,KAA4C,WAAhD,EAA6D;QACrDI,WAAWC,SAASC,aAAT,CAAuB,UAAvB,CAAjB;aACSC,KAAT,GAAiB,CAAjB;uCACmC,CAAC,CAACH,SAASI,UAA9C;;SAEKR,gCAAP;;;;;;;;AAQF,AAAe,gBAASE,KAAT,EAAgBO,IAAhB,EAAsB;;QAE7BC,KAAN;;;MAGIL,SAASM,SAAb,EAAwB;QAChBC,UAAUP,SAASM,SAAT,CAAmBE,WAAnB,EAAhB;YACQJ,IAAR,GAAeA,IAAf;;;YAGQK,QAAR,CAAiB,KAAjB;YACQC,MAAR;;;;;;MAMIC,YAAYX,SAASY,WAAT,CAAqB,YAArB,EAAmC,KAAnC,EAA0CR,IAA1C,CAAlB;MACI,CAACO,SAAL,EAAgB;QACRE,QAAQhB,MAAMiB,cAApB;QACMC,MAAMlB,MAAMmB,YAAlB;;QAEI,OAAOnB,MAAMoB,YAAb,KAA8B,UAAlC,EAA8C;YACtCA,YAAN,CAAmBb,IAAnB;KADF,MAEO;UACDR,0BAA0BC,KAA1B,CAAJ,EAAsC;YAC9BqB,WAAWlB,SAASmB,cAAT,CAAwBf,IAAxB,CAAjB;YACIgB,OAAOvB,MAAMM,UAAjB;;;YAGI,CAACiB,IAAL,EAAW;gBACHC,WAAN,CAAkBH,QAAlB;SADF,MAEO;;cAEDI,SAAS,CAAb;cACIC,YAAY,IAAhB;cACIC,UAAU,IAAd;;;cAGMC,QAAQzB,SAASQ,WAAT,EAAd;;iBAEOY,SAASG,cAAc,IAAd,IAAsBC,YAAY,IAA3C,CAAP,EAAyD;gBACjDE,aAAaN,KAAKO,SAAL,CAAeC,MAAlC;;;gBAGIf,SAASS,MAAT,IAAmBT,SAASS,SAASI,UAAzC,EAAqD;oBAC7CG,QAAN,CAAgBN,YAAYH,IAA5B,EAAmCP,QAAQS,MAA3C;;;;gBAIEP,OAAOO,MAAP,IAAiBP,OAAOO,SAASI,UAArC,EAAiD;oBACzCI,MAAN,CAAcN,UAAUJ,IAAxB,EAA+BL,MAAMO,MAArC;;;sBAGQI,UAAV;mBACON,KAAKW,WAAZ;;;;cAIElB,UAAUE,GAAd,EAAmB;kBACXiB,cAAN;;;;;gBAKIC,UAAN,CAAiBf,QAAjB;;OAxCJ,MA0CO;;YAEChB,QAAQL,MAAMK,KAApB;cACMA,KAAN,GAAcA,MAAMgC,KAAN,CAAY,CAAZ,EAAerB,KAAf,IAAwBT,IAAxB,GAA+BF,MAAMgC,KAAN,CAAYnB,GAAZ,CAA7C;;;;;UAKEoB,iBAAN,CAAwBtB,QAAQT,KAAKwB,MAArC,EAA6Cf,QAAQT,KAAKwB,MAA1D;;;QAGMQ,IAAIpC,SAASqC,WAAT,CAAqB,SAArB,CAAV;MACEC,SAAF,CAAY,OAAZ,EAAqB,IAArB,EAA2B,KAA3B;UACMC,aAAN,CAAoBH,CAApB;;;;;;;;;;"}